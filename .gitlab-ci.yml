variables:
  MAVEN_OPTS: "-Dmaven.repo.local=~/.m2/repository"

stages:
  - test-linux
  - test-windows
  - test-mac

default:
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml


# ------ Linux ------

# install required packages, use another user but root (so unit tests about not having permissions work fine)- this to assure everything works fine
.entry_point: &entry_point
  - bash
  - -c
  - apt-get update && apt-get install -y libfontconfig1 && useradd -m testuser && exec su testuser -c bash && export DISPLAY=99

linux-java-11:
  image: 
    name: maven:3.9.5-amazoncorretto-11-debian
    entrypoint: *entry_point
  stage: test-linux
  script: 
    - sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & mvn $MAVEN_CLI_OPTS test
  when: always

linux-java-17:
  image: 
    name: maven:3.9.5-amazoncorretto-17-debian
    entrypoint: *entry_point
  stage: test-linux
  script: 
    - mvn $MAVEN_CLI_OPTS test
  when: always

linux-java-21:
  image: 
    name: maven:3.9.5-amazoncorretto-21-debian
    entrypoint: *entry_point
  stage: test-linux
  script: 
    - mvn --batch-mode --errors --fail-at-end --show-version test
  when: always

# ------ Windows ------

.shared_windows_runners:
  tags:
    - shared-windows
    - windows-1809

windows-java-12:
  extends:
    - .shared_windows_runners
  stage: test-windows
  before_script:
    - choco install maven -y  # install maven to be able to run the tests
    - Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
    - refreshenv
  script:
    - mvn --batch-mode --errors --fail-at-end --show-version test
  when: always


# ------ Mac ------

# .macos_saas_runners:
#   tags:
#     - saas-macos-medium-m1
#   image: macos-13-xcode-14

# mac-java-20:
#   extends:
#     - .macos_saas_runners
#   stage: test-mac
#   before_script:
#     - brew install maven  # install maven to be able to run the tests
#   script:
#     - mvn --batch-mode --errors --fail-at-end --show-version test
#   when: always
